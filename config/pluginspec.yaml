pluginInfo:
  # This is default sample specification
  # Feel free to change it
  # Call flowpdk showdoc pluginspec to see the list of available fields and their description
  pluginName: 'EC-JenkinsCLI'
  version: '1.1.0'
  description: 'CloudBees CD wrapper for Jenkins CLI actions that cannot be performed with REST API'
  author: 'Anton Horodchuk'
  repositoryUrl: 'https://github.com/electric-cloud-community/EC-JenkinsCLI/'
  category: 'Utilities'
  shell: 'ec-groovy'

# Plugin configuration description
configuration:
  # This is a shell used for checking connection
  shell: 'ec-groovy'
  # A script for checking connection will be generated
  checkConnection: 'true'
  # A set of fields will be added to process debug level in the configuration
  hasDebugLevel: true
  parameters:
    - name: config
      documentation: The name for the created configuration
      required: true
      type: entry
      label: Configuration Name
    - name: desc
      documentation: Description for the configuration
      required: false
      type: entry
      label: Description
    - name: endpoint
      documentation: Third-party endpoint to connect to.
      required: false
      type: entry
      label: Endpoint
    - name: credential
      documentation: A sample credential
      required: true
      type: credential
      label: Credential
    - name: cliPath
      documentation: Path to the jenkins-cli.jar
      required: required
      type: entry
      label: CLI Path
    - name: downloadCli
      documentation: Download jenkins-cli.jar to the specified location before execution
      required: true
      type: checkbox
      initiallyChecked: true
      checkedValue: true
      uncheckedValue: false
      label: Download CLI?
    - name: checkConnection
      documentation: Check connection before saving configuration
      required: true
      type: checkbox
      initiallyChecked: true
      checkedValue: true
      uncheckedValue: false
      label: Check Connection

procedures:
  - name: 'Restart Jenkins'
    description: 'Restarts Jenkins server'
    hasConfig: true
    parameters:
      - name: safe
        label: Perform Safe Restart?
        documentation: Jenkins will perform restart when jobs are finished
        required: true
        type: checkbox
        initiallyChecked: true
        checkedValue: true
        uncheckedValue: false
      - name: waitForServer
        documentation: Perform action and wait for server to be available.
        required: true
        type: checkbox
        initiallyChecked: true
        checkedValue: true
        uncheckedValue: false
        label: Wait For Server?

  - name: 'Wait for Server'
    description: 'Polling server until it is ready to serve requests'
    hasConfig: true
    parameters:
      - name: waitTimeout
        default: 300
        documentation: Wait for server to be available.
        required: true
        type: entry
        label: Timeout

  - name: 'Install Plugin'
    description: 'Installs a plugin (should be available in Updates Center)'
    hasConfig: true
    parameters:
      - name: pluginPath
        documentation: Path to plugin (URL or file path)
        required: true
        type: entry
        label: Plugin File Path

  - name: 'Apply Configuration'
    description: 'Applies JCasC configuration'
    hasConfig: true
    parameters:
      - name: configurationPath
        documentation: Path to the file with a configuration YAML.
        required: false
        type: entry
        label: File Path
      - name: configurationYaml
        documentation: Configuration in YAML format.
        required: false
        type: textarea
        label: YAML

  - name: 'Execute Script'
    description: 'Executes groovy script on server'
    hasConfig: true
    parameters:
      - name: scriptPath
        documentation: Path to the file with a script.
        required: false
        type: entry
        label: File Path
      - name: scriptText
        documentation: Groovy script text.
        required: false
        type: textarea
        label: Script text

  - name: 'Import Job from XML'
    description: 'Creates new job on the Jenkins server'
    hasConfig: true
    parameters:
      - name: jenkinsJobName
        documentation: 'Name of the new Jenkins job'
        required: true
        type: entry
        label: 'Job Name'
      - name: xmlFilePath
        label: 'File Path'
        documentation: 'Path to a file with an XML representation of the job'
        required: false
        type: entry
      - name: xmlFileScriptContent
        documentation: 'Content will be saved in a temporary file and provided as "File Path"'
        label: 'File Content'
        required: false
        type: textarea

  - name: 'Export Job to XML'
    description: 'Exports existing job to an XML file'
    hasConfig: true
    parameters:
      - name: jenkinsJobName
        label: 'Job Name'
        documentation: 'Name of the Jenkins job to save'
        required: true
        type: entry
      - name: filePath
        label: 'Result filepath'
        documentation: 'XML representation will be saved to the specified filepath'
        type: entry
        required: true
      - name: resultProperty
        label: saveToProperty
        documentation: 'If specified, the result will be saved to the property'
        required: false
        type: 'entry'

  - name: 'Execute Custom Command'
    description: 'Allows to execute custom command that is not covered by other procedures'
    hasConfig: true
    parameters:
      - name: command
        label: 'Command'
        type: entry
        required: true
      - name: arguments
        label: 'Arguments'
        documentation: 'List of the arguments separated by a comma. e.g. "execute-groovy,="'
        required: false
        type: entry
      - name: usesStdin
        label: 'Uses STDIN'
        documentation: 'Check this if command will require anything to be sent to STDIN.'
        required: false
        type: checkbox
        initiallyChecked: true
        checkedValue: true
        uncheckedValue: false
      - name: inputPath
        documentation: Path to the file that will be feed to program's STDIN
        required: false
        type: entry
        label: STDIN Source Filepath
        condition: '${usesStdin} == "true"'
      - name: inputText
        documentation: Content that will be feed to program's STDIN
        required: false
        type: textarea
        label: STDIN Source Content
        condition: '${usesStdin} == "true"'
      - name: filePath
        label: 'Result filepath'
        documentation: 'STDOUT will be saved to the specified filepath'
        type: entry
        required: true
      - name: resultProperty
        label: saveToProperty
        documentation: 'If specified, the result will be saved to the property'
        required: false
        type: 'entry'

  - name: 'Create Master Configuration'
    description: 'Creates additional configuration for the CJOC Managed Master'
    hasConfig: true
    parameters:
      - name: masterName
        documentation: Name of the managed master
        required: true
        type: entry
        label: Master Name
      - name: resultProperty
        documentation: Where to save result configuration name
        default: '/myJobStep/configName'
        value: '/myJobStep/configName'
        required: true
        type: entry
        label: Result Property